#!/usr/bin/env python3

import argparse

from lib.script_utils import virtualenv


BASE_TEST_RUNNER_ARGS = ['--eradicate', '--flake8', '--spec']


def main():
    args = get_args()
    return run_tests(args.test, watch=args.watch)


def get_args():
    parser = argparse.ArgumentParser()
    parser.add_argument('-t', '--test', default='tests', help="""
        The test module to run""".strip())
    parser.add_argument('-w', '--watch', action='store_true', help="""
        Watch files for changes and rerun tests automatically""".strip())

    return parser.parse_args()


def run_tests(suite, watch=False):
    args = build_args(suite)
    test_runner = run_on_updates() if watch else run_once
    return test_runner(args)


def build_args(suite):
    args = BASE_TEST_RUNNER_ARGS
    args.extend(specified_test_suite(suite))
    return args


def specified_test_suite(suite):
    if not suite:
        suite = 'tests'
    return ['--pyargs', suite]


def run_on_updates():
    import pytest_watch

    def runner(args):
        return pytest_watch.command.main(['--'] + args)

    return runner


def run_once():
    import pytest
    return pytest.main


if __name__ == '__main__':
    import sys

    with virtualenv():
        sys.exit(main())
